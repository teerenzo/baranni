// File generated by FlutterFire CLI.
// ignore_for_file: lines_longer_than_80_chars, avoid_classes_with_only_static_members
import 'package:firebase_core/firebase_core.dart' show FirebaseOptions;
import 'package:flutter/foundation.dart'
    show defaultTargetPlatform, TargetPlatform;

class DefaultFirebaseOptions {
  static FirebaseOptions get currentPlatform {
    switch (defaultTargetPlatform) {
      case TargetPlatform.android:
        return android;
      case TargetPlatform.iOS:
        return ios;
      case TargetPlatform.windows:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for windows - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      case TargetPlatform.linux:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for linux - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      default:
        throw UnsupportedError(
          'DefaultFirebaseOptions are not supported for this platform.',
        );
    }
  }

  static const FirebaseOptions android = FirebaseOptions(
    apiKey: 'AIzaSyAOFlMeJLM6qaY0ajVg6brLQc95NDQth5U',
    appId: '1:929784611742:android:41f713f5dc200ecb878c8f',
    messagingSenderId: '929784611742',
    projectId: 'webkit-5cc0f',
    storageBucket: 'webkit-5cc0f.appspot.com',
  );

  static const FirebaseOptions ios = FirebaseOptions(
    apiKey: 'AIzaSyDC2tqVj_TaAFrtZ56yaOfMvP2y1NNBe_I',
    appId: '1:929784611742:ios:432b6a225229d33d878c8f',
    messagingSenderId: '929784611742',
    projectId: 'webkit-5cc0f',
    storageBucket: 'webkit-5cc0f.appspot.com',
    iosBundleId: 'com.example.barrani',
  );

  static const FirebaseOptions macos = FirebaseOptions(
    apiKey: 'AIzaSyDC2tqVj_TaAFrtZ56yaOfMvP2y1NNBe_I',
    appId: '1:929784611742:ios:26030b018b30c463878c8f',
    messagingSenderId: '929784611742',
    projectId: 'webkit-5cc0f',
    storageBucket: 'webkit-5cc0f.appspot.com',
    iosBundleId: 'com.example.barrani.RunnerTests',
  );
}
